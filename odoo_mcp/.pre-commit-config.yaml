# See https://pre-commit.com for more information
repos:
  # Ruff - Fast Python linter and formatter
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.0
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      - id: ruff-format

  # Type checking with mypy
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.9.0
    hooks:
      - id: mypy
        args: [--strict, --python-version=3.12]
        additional_dependencies:
          - types-aiofiles
          - types-pyyaml
          - fastmcp
          - aiohttp
          - pydantic
        files: ^(src|tests)/
        pass_filenames: false

  # Upgrade syntax to latest Python
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.1
    hooks:
      - id: pyupgrade
        args: [--py312-plus]

  # Remove unused imports and variables
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.3.0
    hooks:
      - id: autoflake
        args:
          - --remove-all-unused-imports
          - --remove-unused-variables
          - --in-place

  # Docstring style checking
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: [--convention=google]
        files: ^src/

  # Commit message linting
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.16.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

  # YAML/TOML formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        types_or: [yaml, toml, json]
        exclude: ^(package-lock\.json|.*\.min\..*|.*build.*)$

  # Prevent secrets in code
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: [--baseline, .secrets.baseline]
        exclude: ^(.*\.lock|package-lock\.json|.*test.*|.*fixture.*)$

  # Check for common issues
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: [--maxkb=500]
      - id: check-json
      - id: check-toml
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key

  # Local custom hooks
  - repo: local
    hooks:
      - id: pytest-check
        name: pytest quick unit tests
        entry: bash -c 'if [ -d tests/unit ]; then uv run pytest tests/unit -x -q --tb=short; fi'
        language: system
        pass_filenames: false
        stages: [pre-push]
        verbose: true
